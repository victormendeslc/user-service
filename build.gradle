plugins {
    id 'org.liquibase.gradle' version '2.0.2'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'net.linguica.maven-settings' version '0.5'
}

group = 'com.springenterprise'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    set('springCloudVersion', "Hoxton.RELEASE")
    set('springFoxVersion', "3.0.0-SNAPSHOT")
    set('zalandoWebflux', "0.25.2")
    set("mapstructVersion", "1.3.1.Final")
    set("hibernateVersion", "5.4.9.Final")
}


project.ext.databaseUrl = "jdbc:postgresql://localhost:15432/user_db"
project.ext.referenceUrl = "hibernate:spring:com.springenterprise.userservice"
apply from: "gradle/liquibase.gradle"

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    maven {
        name 'nexus-releases'
        url "http://nexus.url:8081/repository/maven-releases"
    }
    maven {
        name 'nexus-snapshots'
        url "http://nexus.url:8081/repository/maven-snapshots"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'com.spring.enterprise.authserver.commons:auth-server-commons:0.0.1-RELEASE'
    //implementation 'com.spring.enterprise:spring-enterprise-starter:0.0.2-SNAPSHOT'
    //implementation 'com.spring.enterprise.autoconfigure:spring-enterprise-autoconfigure:0.0.1-RELEASE'
    implementation 'com.spring.enterprise.common:spring-enterprise-common:0.0.2-RELEASE'

    //implementation("io.springfox:springfox-swagger2:3.0.0-SNAPSHOT")
    //implementation("io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT")
    //implementation("io.springfox:springfox-spring-webflux:3.0.0-SNAPSHOT")


    //compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.1'
    //implementation "com.fasterxml.jackson.module:jackson-module-afterburner"

    implementation 'org.hibernate:hibernate-core:5.4.9.Final'
    implementation 'org.hibernate:hibernate-envers:5.4.9.Final'
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
   // implementation "org.zalando:problem-spring-webflux:${zalandoWebflux}"

    runtimeOnly 'org.postgresql:postgresql'
    //implementation 'org.liquibase:liquibase-core'
    compileOnly "org.projectlombok:lombok"
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testCompileOnly "org.projectlombok:lombok"
    testCompileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testAnnotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"


    //implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation('com.h2database:h2')
}

test {
    useJUnitPlatform()
}